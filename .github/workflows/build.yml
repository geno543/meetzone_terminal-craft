name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to use when manually triggered (without v prefix)'
        required: false
        default: 'dev'

# Strip “v” off a push tag, or use the manual input
env:
  VERSION: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      VERSION: ${{ env.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller cairosvg pillow
          pip install -r requirements.txt
      - name: Convert SVG to ICO
        run: |
          python -c "from cairosvg import svg2png; from PIL import Image; svg2png(url='icon.svg', write_to='icon.png'); Image.open('icon.png').save('icon.ico')"
      - name: Build executable
        run: |
          pyinstaller \
            --name="meet-zone-windows-${{ env.VERSION }}" \
            --onefile --windowed \
            --icon=icon.ico \
            --add-data="roster.csv;." \
            --hidden-import=zoneinfo.tzpath \
            --hidden-import=pkg_resources.py2_warn \
            src/meet_zone/__main__.py
      - name: Generate SHA256 checksum
        shell: powershell
        run: |
          Get-FileHash -Algorithm SHA256 -Path "dist/meet-zone-windows-${{ env.VERSION }}.exe" |
            Select-Object -ExpandProperty Hash > "dist/meet-zone-windows-${{ env.VERSION }}.exe.sha256"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: meet-zone-windows-${{ env.VERSION }}
          path: |
            dist/meet-zone-windows-${{ env.VERSION }}.exe
            dist/meet-zone-windows-${{ env.VERSION }}.exe.sha256

  build-macos:
    runs-on: macos-latest
    env:
      VERSION: ${{ env.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller cairosvg pillow
          pip install -r requirements.txt
      - name: Convert SVG to PNG
        run: |
          python -c "from cairosvg import svg2png; svg2png(url='icon.svg', write_to='icon.png')"
      - name: Build executable
        run: |
          pyinstaller \
            --name="meet-zone-macos-${{ env.VERSION }}" \
            --onefile --windowed \
            --icon=icon.png \
            --add-data="roster.csv:." \
            --hidden-import=zoneinfo.tzpath \
            --hidden-import=pkg_resources.py2_warn \
            src/meet_zone/__main__.py
      - name: Make executable
        run: chmod +x "dist/meet-zone-macos-${{ env.VERSION }}"
      - name: Generate SHA256 checksum
        run: |
          shasum -a 256 "dist/meet-zone-macos-${{ env.VERSION }}" > "dist/meet-zone-macos-${{ env.VERSION }}.sha256"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: meet-zone-macos-${{ env.VERSION }}
          path: |
            dist/meet-zone-macos-${{ env.VERSION }}
            dist/meet-zone-macos-${{ env.VERSION }}.sha256

  build-linux:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ env.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller cairosvg pillow
          pip install -r requirements.txt
      - name: Convert SVG to PNG
        run: |
          python -c "from cairosvg import svg2png; svg2png(url='icon.svg', write_to='icon.png')"
      - name: Build executable
        run: |
          pyinstaller \
            --name="meet-zone-linux-${{ env.VERSION }}" \
            --onefile --windowed \
            --icon=icon.png \
            --add-data="roster.csv:." \
            --hidden-import=zoneinfo.tzpath \
            --hidden-import=pkg_resources.py2_warn \
            src/meet_zone/__main__.py
      - name: Make executable
        run: chmod +x "dist/meet-zone-linux-${{ env.VERSION }}"
      - name: Generate SHA256 checksum
        run: |
          sha256sum "dist/meet-zone-linux-${{ env.VERSION }}" > "dist/meet-zone-linux-${{ env.VERSION }}.sha256"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: meet-zone-linux-${{ env.VERSION }}
          path: |
            dist/meet-zone-linux-${{ env.VERSION }}
            dist/meet-zone-linux-${{ env.VERSION }}.sha256

  create-source-archives:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ env.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Create ZIP archive
        run: |
          zip -r "meet-zone-source-${{ env.VERSION }}.zip" . \
            -x "*.git*" "*__pycache__*" "*.pytest_cache*" "*.venv*" "dist/*" "build/*"
      - name: Create TAR.GZ archive
        run: |
          tar --exclude=".git" --exclude="__pycache__" --exclude=".pytest_cache" \
              --exclude=".venv" --exclude="dist" --exclude="build" \
            -czf "meet-zone-source-${{ env.VERSION }}.tar.gz" .
      - name: Generate SHA256 checksums
        run: |
          sha256sum "meet-zone-source-${{ env.VERSION }}.zip" > "meet-zone-source-${{ env.VERSION }}.zip.sha256"
          sha256sum "meet-zone-source-${{ env.VERSION }}.tar.gz" > "meet-zone-source-${{ env.VERSION }}.tar.gz.sha256"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: source-code-${{ env.VERSION }}
          path: |
            meet-zone-source-${{ env.VERSION }}.zip
            meet-zone-source-${{ env.VERSION }}.zip.sha256
            meet-zone-source-${{ env.VERSION }}.tar.gz
            meet-zone-source-${{ env.VERSION }}.tar.gz.sha256

  create-release:
    needs:
      - build-windows
      - build-macos
      - build-linux
      - create-source-archives
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ env.VERSION }}
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Gather artifacts into root
        run: |
          cp -r meet-zone-windows-${{ env.VERSION }}/dist/* .
          cp -r meet-zone-macos-${{ env.VERSION }}/dist/* .
          cp -r meet-zone-linux-${{ env.VERSION }}/dist/* .
          cp source-code-${{ env.VERSION }}/* .

      - name: List files
        run: find . -maxdepth 1 -type f | sort

      - name: Create GitHub Release
        if: github.event_name != 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: "Build and Release ${{ env.VERSION }}"
          files: |
            meet-zone-windows-${{ env.VERSION }}.exe
            meet-zone-windows-${{ env.VERSION }}.exe.sha256
            meet-zone-macos-${{ env.VERSION }}
            meet-zone-macos-${{ env.VERSION }}.sha256
            meet-zone-linux-${{ env.VERSION }}
            meet-zone-linux-${{ env.VERSION }}.sha256
            meet-zone-source-${{ env.VERSION }}.zip
            meet-zone-source-${{ env.VERSION }}.zip.sha256
            meet-zone-source-${{ env.VERSION }}.tar.gz
            meet-zone-source-${{ env.VERSION }}.tar.gz.sha256
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Create Development Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: dev-${{ env.VERSION }}-${{ github.run_number }}
          name: "Development Build ${{ env.VERSION }}-${{ github.run_number }}"
          files: |
            meet-zone-windows-${{ env.VERSION }}.exe
            meet-zone-windows-${{ env.VERSION }}.exe.sha256
            meet-zone-macos-${{ env.VERSION }}
            meet-zone-macos-${{ env.VERSION }}.sha256
            meet-zone-linux-${{ env.VERSION }}
            meet-zone-linux-${{ env.VERSION }}.sha256
            meet-zone-source-${{ env.VERSION }}.zip
            meet-zone-source-${{ env.VERSION }}.zip.sha256
            meet-zone-source-${{ env.VERSION }}.tar.gz
            meet-zone-source-${{ env.VERSION }}.tar.gz.sha256
          draft: false
          prerelease: true
